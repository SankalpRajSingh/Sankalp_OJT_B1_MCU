
STM32F411X_HEADER.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000003c4  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800055c  08000564  00010564  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800055c  0800055c  00010564  2**0
                  CONTENTS
  4 .ARM          00000000  0800055c  0800055c  00010564  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800055c  08000564  00010564  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800055c  0800055c  0001055c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000560  08000560  00010560  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010564  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000564  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000564  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010564  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000bc0  00000000  00000000  00010594  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000335  00000000  00000000  00011154  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000e0  00000000  00000000  00011490  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000a8  00000000  00000000  00011570  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000021e8  00000000  00000000  00011618  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001319  00000000  00000000  00013800  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008977  00000000  00000000  00014b19  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001d490  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000260  00000000  00000000  0001d4e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000544 	.word	0x08000544

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	08000544 	.word	0x08000544

080001d8 <gpio_config>:
#include <stdint.h>
#include "stm32f411.h"
#include "stdio.h"

void gpio_config()
{
 80001d8:	b580      	push	{r7, lr}
 80001da:	b084      	sub	sp, #16
 80001dc:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;

		GpioLed.pGPIOx = GPIOA;
 80001de:	4b0c      	ldr	r3, [pc, #48]	; (8000210 <gpio_config+0x38>)
 80001e0:	607b      	str	r3, [r7, #4]
		GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 80001e2:	2305      	movs	r3, #5
 80001e4:	723b      	strb	r3, [r7, #8]
		GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80001e6:	2301      	movs	r3, #1
 80001e8:	727b      	strb	r3, [r7, #9]
		GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 80001ea:	2300      	movs	r3, #0
 80001ec:	72bb      	strb	r3, [r7, #10]
		GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80001ee:	2300      	movs	r3, #0
 80001f0:	733b      	strb	r3, [r7, #12]
		GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80001f2:	2300      	movs	r3, #0
 80001f4:	72fb      	strb	r3, [r7, #11]

		GPIO_PeriClockControl(GPIOA,ENABLE);
 80001f6:	2101      	movs	r1, #1
 80001f8:	4805      	ldr	r0, [pc, #20]	; (8000210 <gpio_config+0x38>)
 80001fa:	f000 f80b 	bl	8000214 <GPIO_PeriClockControl>

		GPIO_Init(&GpioLed);
 80001fe:	1d3b      	adds	r3, r7, #4
 8000200:	4618      	mov	r0, r3
 8000202:	f000 f865 	bl	80002d0 <GPIO_Init>
}
 8000206:	bf00      	nop
 8000208:	3710      	adds	r7, #16
 800020a:	46bd      	mov	sp, r7
 800020c:	bd80      	pop	{r7, pc}
 800020e:	bf00      	nop
 8000210:	40020000 	.word	0x40020000

08000214 <GPIO_PeriClockControl>:
#include "stm32f411x_driver_gpio.h"

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000214:	b480      	push	{r7}
 8000216:	b083      	sub	sp, #12
 8000218:	af00      	add	r7, sp, #0
 800021a:	6078      	str	r0, [r7, #4]
 800021c:	460b      	mov	r3, r1
 800021e:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000220:	78fb      	ldrb	r3, [r7, #3]
 8000222:	2b01      	cmp	r3, #1
 8000224:	d140      	bne.n	80002a8 <GPIO_PeriClockControl+0x94>
	{
		if(pGPIOx == GPIOA)
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	4a22      	ldr	r2, [pc, #136]	; (80002b4 <GPIO_PeriClockControl+0xa0>)
 800022a:	4293      	cmp	r3, r2
 800022c:	d106      	bne.n	800023c <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 800022e:	4b22      	ldr	r3, [pc, #136]	; (80002b8 <GPIO_PeriClockControl+0xa4>)
 8000230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000232:	4a21      	ldr	r2, [pc, #132]	; (80002b8 <GPIO_PeriClockControl+0xa4>)
 8000234:	f043 0301 	orr.w	r3, r3, #1
 8000238:	6313      	str	r3, [r2, #48]	; 0x30
	}
	else
	{
		//TODO
	}
}
 800023a:	e035      	b.n	80002a8 <GPIO_PeriClockControl+0x94>
		else if(pGPIOx == GPIOB)
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4a1f      	ldr	r2, [pc, #124]	; (80002bc <GPIO_PeriClockControl+0xa8>)
 8000240:	4293      	cmp	r3, r2
 8000242:	d106      	bne.n	8000252 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000244:	4b1c      	ldr	r3, [pc, #112]	; (80002b8 <GPIO_PeriClockControl+0xa4>)
 8000246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000248:	4a1b      	ldr	r2, [pc, #108]	; (80002b8 <GPIO_PeriClockControl+0xa4>)
 800024a:	f043 0302 	orr.w	r3, r3, #2
 800024e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000250:	e02a      	b.n	80002a8 <GPIO_PeriClockControl+0x94>
		else if(pGPIOx == GPIOC)
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4a1a      	ldr	r2, [pc, #104]	; (80002c0 <GPIO_PeriClockControl+0xac>)
 8000256:	4293      	cmp	r3, r2
 8000258:	d106      	bne.n	8000268 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800025a:	4b17      	ldr	r3, [pc, #92]	; (80002b8 <GPIO_PeriClockControl+0xa4>)
 800025c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800025e:	4a16      	ldr	r2, [pc, #88]	; (80002b8 <GPIO_PeriClockControl+0xa4>)
 8000260:	f043 0304 	orr.w	r3, r3, #4
 8000264:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000266:	e01f      	b.n	80002a8 <GPIO_PeriClockControl+0x94>
		else if(pGPIOx == GPIOD)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a16      	ldr	r2, [pc, #88]	; (80002c4 <GPIO_PeriClockControl+0xb0>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d106      	bne.n	800027e <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000270:	4b11      	ldr	r3, [pc, #68]	; (80002b8 <GPIO_PeriClockControl+0xa4>)
 8000272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000274:	4a10      	ldr	r2, [pc, #64]	; (80002b8 <GPIO_PeriClockControl+0xa4>)
 8000276:	f043 0308 	orr.w	r3, r3, #8
 800027a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027c:	e014      	b.n	80002a8 <GPIO_PeriClockControl+0x94>
		else if(pGPIOx == GPIOE)
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	4a11      	ldr	r2, [pc, #68]	; (80002c8 <GPIO_PeriClockControl+0xb4>)
 8000282:	4293      	cmp	r3, r2
 8000284:	d106      	bne.n	8000294 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000286:	4b0c      	ldr	r3, [pc, #48]	; (80002b8 <GPIO_PeriClockControl+0xa4>)
 8000288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028a:	4a0b      	ldr	r2, [pc, #44]	; (80002b8 <GPIO_PeriClockControl+0xa4>)
 800028c:	f043 0310 	orr.w	r3, r3, #16
 8000290:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000292:	e009      	b.n	80002a8 <GPIO_PeriClockControl+0x94>
		else if(pGPIOx == GPIOH)
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4a0d      	ldr	r2, [pc, #52]	; (80002cc <GPIO_PeriClockControl+0xb8>)
 8000298:	4293      	cmp	r3, r2
 800029a:	d105      	bne.n	80002a8 <GPIO_PeriClockControl+0x94>
			GPIOH_PCLK_EN();
 800029c:	4b06      	ldr	r3, [pc, #24]	; (80002b8 <GPIO_PeriClockControl+0xa4>)
 800029e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a0:	4a05      	ldr	r2, [pc, #20]	; (80002b8 <GPIO_PeriClockControl+0xa4>)
 80002a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a8:	bf00      	nop
 80002aa:	370c      	adds	r7, #12
 80002ac:	46bd      	mov	sp, r7
 80002ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002b2:	4770      	bx	lr
 80002b4:	40020000 	.word	0x40020000
 80002b8:	40023800 	.word	0x40023800
 80002bc:	40020400 	.word	0x40020400
 80002c0:	40020800 	.word	0x40020800
 80002c4:	40020c00 	.word	0x40020c00
 80002c8:	40021000 	.word	0x40021000
 80002cc:	40021c00 	.word	0x40021c00

080002d0 <GPIO_Init>:

/************/

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80002d0:	b580      	push	{r7, lr}
 80002d2:	b084      	sub	sp, #16
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 80002d8:	2300      	movs	r3, #0
 80002da:	60fb      	str	r3, [r7, #12]
	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	681b      	ldr	r3, [r3, #0]
 80002e0:	2101      	movs	r1, #1
 80002e2:	4618      	mov	r0, r3
 80002e4:	f7ff ff96 	bl	8000214 <GPIO_PeriClockControl>

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	795b      	ldrb	r3, [r3, #5]
 80002ec:	2b03      	cmp	r3, #3
 80002ee:	d81f      	bhi.n	8000330 <GPIO_Init+0x60>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));  //it stores the PIN number in temp
 80002f0:	687b      	ldr	r3, [r7, #4]
 80002f2:	795b      	ldrb	r3, [r3, #5]
 80002f4:	461a      	mov	r2, r3
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	791b      	ldrb	r3, [r3, #4]
 80002fa:	005b      	lsls	r3, r3, #1
 80002fc:	fa02 f303 	lsl.w	r3, r2, r3
 8000300:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));  //clearing both the BITs
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	681b      	ldr	r3, [r3, #0]
 8000306:	681a      	ldr	r2, [r3, #0]
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	791b      	ldrb	r3, [r3, #4]
 800030c:	005b      	lsls	r3, r3, #1
 800030e:	2103      	movs	r1, #3
 8000310:	fa01 f303 	lsl.w	r3, r1, r3
 8000314:	43db      	mvns	r3, r3
 8000316:	4619      	mov	r1, r3
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	400a      	ands	r2, r1
 800031e:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;  //setting the temp into the MODER
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	681b      	ldr	r3, [r3, #0]
 8000324:	6819      	ldr	r1, [r3, #0]
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	68fa      	ldr	r2, [r7, #12]
 800032c:	430a      	orrs	r2, r1
 800032e:	601a      	str	r2, [r3, #0]
	{
		/* LATER WILL IMPLEMENT THE IRQ CODE */
	}

	/* CONFIGURE THE SPEED */
	temp = 0;
 8000330:	2300      	movs	r3, #0
 8000332:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	799b      	ldrb	r3, [r3, #6]
 8000338:	461a      	mov	r2, r3
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	791b      	ldrb	r3, [r3, #4]
 800033e:	005b      	lsls	r3, r3, #1
 8000340:	fa02 f303 	lsl.w	r3, r2, r3
 8000344:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	689a      	ldr	r2, [r3, #8]
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	791b      	ldrb	r3, [r3, #4]
 8000350:	005b      	lsls	r3, r3, #1
 8000352:	2103      	movs	r1, #3
 8000354:	fa01 f303 	lsl.w	r3, r1, r3
 8000358:	43db      	mvns	r3, r3
 800035a:	4619      	mov	r1, r3
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	400a      	ands	r2, r1
 8000362:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDER |= temp;
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	6899      	ldr	r1, [r3, #8]
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	68fa      	ldr	r2, [r7, #12]
 8000370:	430a      	orrs	r2, r1
 8000372:	609a      	str	r2, [r3, #8]

	//CONFIGURE THE PUPD SETTINGS
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	79db      	ldrb	r3, [r3, #7]
 8000378:	461a      	mov	r2, r3
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	791b      	ldrb	r3, [r3, #4]
 800037e:	005b      	lsls	r3, r3, #1
 8000380:	fa02 f303 	lsl.w	r3, r2, r3
 8000384:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	681b      	ldr	r3, [r3, #0]
 800038a:	68da      	ldr	r2, [r3, #12]
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	791b      	ldrb	r3, [r3, #4]
 8000390:	005b      	lsls	r3, r3, #1
 8000392:	2103      	movs	r1, #3
 8000394:	fa01 f303 	lsl.w	r3, r1, r3
 8000398:	43db      	mvns	r3, r3
 800039a:	4619      	mov	r1, r3
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	400a      	ands	r2, r1
 80003a2:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	68d9      	ldr	r1, [r3, #12]
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	68fa      	ldr	r2, [r7, #12]
 80003b0:	430a      	orrs	r2, r1
 80003b2:	60da      	str	r2, [r3, #12]

	//CONFIGURE THE OPTYPE SETTINGS
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType <<  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	7a1b      	ldrb	r3, [r3, #8]
 80003b8:	461a      	mov	r2, r3
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	791b      	ldrb	r3, [r3, #4]
 80003be:	fa02 f303 	lsl.w	r3, r2, r3
 80003c2:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 <<  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	685a      	ldr	r2, [r3, #4]
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	791b      	ldrb	r3, [r3, #4]
 80003ce:	4619      	mov	r1, r3
 80003d0:	2301      	movs	r3, #1
 80003d2:	408b      	lsls	r3, r1
 80003d4:	43db      	mvns	r3, r3
 80003d6:	4619      	mov	r1, r3
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	400a      	ands	r2, r1
 80003de:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	6859      	ldr	r1, [r3, #4]
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	68fa      	ldr	r2, [r7, #12]
 80003ec:	430a      	orrs	r2, r1
 80003ee:	605a      	str	r2, [r3, #4]
//	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTEN)
//	{
//		uint8_t temp1, tmmep2;
//		temp1= pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
//	}
}
 80003f0:	bf00      	nop
 80003f2:	3710      	adds	r7, #16
 80003f4:	46bd      	mov	sp, r7
 80003f6:	bd80      	pop	{r7, pc}

080003f8 <led_init>:
{
	while(T--){
	for(uint32_t i = 0; i < 500000; i ++); }
}
void led_init()
{
 80003f8:	b480      	push	{r7}
 80003fa:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= 0x1;
 80003fc:	4b08      	ldr	r3, [pc, #32]	; (8000420 <led_init+0x28>)
 80003fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000400:	4a07      	ldr	r2, [pc, #28]	; (8000420 <led_init+0x28>)
 8000402:	f043 0301 	orr.w	r3, r3, #1
 8000406:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOA->MODER |= 0x400;
 8000408:	4b06      	ldr	r3, [pc, #24]	; (8000424 <led_init+0x2c>)
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	4a05      	ldr	r2, [pc, #20]	; (8000424 <led_init+0x2c>)
 800040e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000412:	6013      	str	r3, [r2, #0]
}
 8000414:	bf00      	nop
 8000416:	46bd      	mov	sp, r7
 8000418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800041c:	4770      	bx	lr
 800041e:	bf00      	nop
 8000420:	40023800 	.word	0x40023800
 8000424:	40020000 	.word	0x40020000

08000428 <sw_init>:
void sw_init()
{
 8000428:	b480      	push	{r7}
 800042a:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= 0x4;
 800042c:	4b07      	ldr	r3, [pc, #28]	; (800044c <sw_init+0x24>)
 800042e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000430:	4a06      	ldr	r2, [pc, #24]	; (800044c <sw_init+0x24>)
 8000432:	f043 0304 	orr.w	r3, r3, #4
 8000436:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOC->MODER |= 0x0;
 8000438:	4b05      	ldr	r3, [pc, #20]	; (8000450 <sw_init+0x28>)
 800043a:	4a05      	ldr	r2, [pc, #20]	; (8000450 <sw_init+0x28>)
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	6013      	str	r3, [r2, #0]
}
 8000440:	bf00      	nop
 8000442:	46bd      	mov	sp, r7
 8000444:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000448:	4770      	bx	lr
 800044a:	bf00      	nop
 800044c:	40023800 	.word	0x40023800
 8000450:	40020800 	.word	0x40020800

08000454 <operation>:
void operation()
{
 8000454:	b480      	push	{r7}
 8000456:	af00      	add	r7, sp, #0
	if(GPIOC->IDR & 0x2000)
 8000458:	4b0b      	ldr	r3, [pc, #44]	; (8000488 <operation+0x34>)
 800045a:	691b      	ldr	r3, [r3, #16]
 800045c:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8000460:	2b00      	cmp	r3, #0
 8000462:	d006      	beq.n	8000472 <operation+0x1e>
	{
		GPIOA->BSRR |= 0x200000;
 8000464:	4b09      	ldr	r3, [pc, #36]	; (800048c <operation+0x38>)
 8000466:	699b      	ldr	r3, [r3, #24]
 8000468:	4a08      	ldr	r2, [pc, #32]	; (800048c <operation+0x38>)
 800046a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800046e:	6193      	str	r3, [r2, #24]
	}
	else
	{
		GPIOA->BSRR |= 0x20;
	}
}
 8000470:	e005      	b.n	800047e <operation+0x2a>
		GPIOA->BSRR |= 0x20;
 8000472:	4b06      	ldr	r3, [pc, #24]	; (800048c <operation+0x38>)
 8000474:	699b      	ldr	r3, [r3, #24]
 8000476:	4a05      	ldr	r2, [pc, #20]	; (800048c <operation+0x38>)
 8000478:	f043 0320 	orr.w	r3, r3, #32
 800047c:	6193      	str	r3, [r2, #24]
}
 800047e:	bf00      	nop
 8000480:	46bd      	mov	sp, r7
 8000482:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000486:	4770      	bx	lr
 8000488:	40020800 	.word	0x40020800
 800048c:	40020000 	.word	0x40020000

08000490 <main>:
int main(void)
{
 8000490:	b580      	push	{r7, lr}
 8000492:	af00      	add	r7, sp, #0
//	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
//
//	GPIO_PeriClockControl(GPIOA,ENABLE);
//
//	GPIO_Init(&GpioLed);
	gpio_config();
 8000494:	f7ff fea0 	bl	80001d8 <gpio_config>
	led_init();
 8000498:	f7ff ffae 	bl	80003f8 <led_init>
	sw_init();
 800049c:	f7ff ffc4 	bl	8000428 <sw_init>
		//GPIO_ToggOutputPin(GPIOA,GPIO_PIN_NO_5);
		//GPIO_WriteOutputPin(GPIOA,GPIO_PIN_NO_5,1);
		//delay(5);
		//GPIO_WriteOutputPin(GPIOA,GPIO_PIN_NO_5,0);
		//delay(5);
		operation();
 80004a0:	f7ff ffd8 	bl	8000454 <operation>
 80004a4:	e7fc      	b.n	80004a0 <main+0x10>
	...

080004a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004a8:	480d      	ldr	r0, [pc, #52]	; (80004e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004aa:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004ac:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004b0:	480c      	ldr	r0, [pc, #48]	; (80004e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80004b2:	490d      	ldr	r1, [pc, #52]	; (80004e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004b4:	4a0d      	ldr	r2, [pc, #52]	; (80004ec <LoopForever+0xe>)
  movs r3, #0
 80004b6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004b8:	e002      	b.n	80004c0 <LoopCopyDataInit>

080004ba <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004ba:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004bc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004be:	3304      	adds	r3, #4

080004c0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004c0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004c2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004c4:	d3f9      	bcc.n	80004ba <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004c6:	4a0a      	ldr	r2, [pc, #40]	; (80004f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004c8:	4c0a      	ldr	r4, [pc, #40]	; (80004f4 <LoopForever+0x16>)
  movs r3, #0
 80004ca:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004cc:	e001      	b.n	80004d2 <LoopFillZerobss>

080004ce <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004ce:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004d0:	3204      	adds	r2, #4

080004d2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004d2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004d4:	d3fb      	bcc.n	80004ce <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004d6:	f000 f811 	bl	80004fc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004da:	f7ff ffd9 	bl	8000490 <main>

080004de <LoopForever>:

LoopForever:
    b LoopForever
 80004de:	e7fe      	b.n	80004de <LoopForever>
  ldr   r0, =_estack
 80004e0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004e8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80004ec:	08000564 	.word	0x08000564
  ldr r2, =_sbss
 80004f0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80004f4:	2000001c 	.word	0x2000001c

080004f8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004f8:	e7fe      	b.n	80004f8 <ADC_IRQHandler>
	...

080004fc <__libc_init_array>:
 80004fc:	b570      	push	{r4, r5, r6, lr}
 80004fe:	4d0d      	ldr	r5, [pc, #52]	; (8000534 <__libc_init_array+0x38>)
 8000500:	4c0d      	ldr	r4, [pc, #52]	; (8000538 <__libc_init_array+0x3c>)
 8000502:	1b64      	subs	r4, r4, r5
 8000504:	10a4      	asrs	r4, r4, #2
 8000506:	2600      	movs	r6, #0
 8000508:	42a6      	cmp	r6, r4
 800050a:	d109      	bne.n	8000520 <__libc_init_array+0x24>
 800050c:	4d0b      	ldr	r5, [pc, #44]	; (800053c <__libc_init_array+0x40>)
 800050e:	4c0c      	ldr	r4, [pc, #48]	; (8000540 <__libc_init_array+0x44>)
 8000510:	f000 f818 	bl	8000544 <_init>
 8000514:	1b64      	subs	r4, r4, r5
 8000516:	10a4      	asrs	r4, r4, #2
 8000518:	2600      	movs	r6, #0
 800051a:	42a6      	cmp	r6, r4
 800051c:	d105      	bne.n	800052a <__libc_init_array+0x2e>
 800051e:	bd70      	pop	{r4, r5, r6, pc}
 8000520:	f855 3b04 	ldr.w	r3, [r5], #4
 8000524:	4798      	blx	r3
 8000526:	3601      	adds	r6, #1
 8000528:	e7ee      	b.n	8000508 <__libc_init_array+0xc>
 800052a:	f855 3b04 	ldr.w	r3, [r5], #4
 800052e:	4798      	blx	r3
 8000530:	3601      	adds	r6, #1
 8000532:	e7f2      	b.n	800051a <__libc_init_array+0x1e>
 8000534:	0800055c 	.word	0x0800055c
 8000538:	0800055c 	.word	0x0800055c
 800053c:	0800055c 	.word	0x0800055c
 8000540:	08000560 	.word	0x08000560

08000544 <_init>:
 8000544:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000546:	bf00      	nop
 8000548:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800054a:	bc08      	pop	{r3}
 800054c:	469e      	mov	lr, r3
 800054e:	4770      	bx	lr

08000550 <_fini>:
 8000550:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000552:	bf00      	nop
 8000554:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000556:	bc08      	pop	{r3}
 8000558:	469e      	mov	lr, r3
 800055a:	4770      	bx	lr
